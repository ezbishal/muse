generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  provider     Provider
  streams      Stream[] @relation("myStreams")
  upvotes      Upvote[]
  addedStreams Stream[] @relation("addedStreams")
}

model Stream {
  id              String     @id @default(uuid())
  type            StreamType
  url             String
  title           String     @default("")
  smallImg        String     @default("")
  bigImg          String     @default("")
  extractedId     String
  active          Boolean    @default(true)
  played          Boolean    @default(false)
  playedTimestamp DateTime?
  createdAt       DateTime   @default(now())
  upvotes         Upvote[]
  addedById       String     
  addedBy         User       @relation(fields: [addedById], references: [id], name: "addedStreams")
  userId          String
  user            User       @relation(fields: [userId], references: [id], name: "myStreams")

  CurrentStream CurrentStream[]
}

model CurrentStream {
  userId   String  @id
  streamId String? @unique
  stream   Stream? @relation(fields: [streamId], references: [id])
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  user     User   @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([userId, streamId])
}

enum Provider {
  Google
}

enum StreamType {
  Spotify
  Youtube
}
